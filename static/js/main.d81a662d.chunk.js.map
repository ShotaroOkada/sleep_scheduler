{"version":3,"sources":["actions/Schedules/ActionType.ts","styles/Color.ts","actions/Schedules/ActionCreator.ts","components/GridArea.tsx","styles/Font.ts","components/Atoms/Label.tsx","components/Atoms/SelectBox.tsx","components/Molecules/Questions.tsx","components/Organisms/QuestionArea.tsx","components/Atoms/Time.tsx","components/Molecules/TimeLine.tsx","components/Organisms/TimeLineAmArea.tsx","components/Organisms/TimeLinePmArea.tsx","components/Atoms/Button.tsx","components/Atoms/Form.tsx","components/Molecules/CreatingSchedule.tsx","components/Atoms/Schedule.tsx","components/Molecules/Schedules.tsx","components/Organisms/ScheduleArea.tsx","components/Templates/HomeTemplate.tsx","components/App.tsx","serviceWorker.ts","reducers/Schedules.ts","reducers/index.ts","index.tsx"],"names":["ScheduleActionType","Color","createSchedule","createAction","CREATE_SCHEDULE","deleteSchedule","DELETE_SCHEDULE","copiedSchedule","COPIED_SCHEDULE","positionChangeSchedule","POSITION_CHANGE_SCHEDULE","sizeChangeSchedule","SIZE_CHANGE_SCHEDULE","GridArea","styled","div","props","area","FontFamily","FontSize","Label","name","StyledQuestionLabel","LightGray","Small","Roboto","SelectBox","options","useState","value","label","selectedOption","setSelectedOption","onChange","styles","option","provided","color","control","base","fontFamily","menu","Questions","questions","map","question","index","key","QuestionArea","HomeGridArea","Question","StyledQuestionArea","Time","time","StyledTime","StyledText","span","TimeLine","times","StyledTimeLine","TimeLineAmArea","TimeLineAm","StyledTimeLineAmArea","TimeLinePmArea","TimeLinePm","StyledTimeLinePmArea","Button","onClick","StyledButton","button","Medium","WhiteSmoke","Form","StyledForm","type","input","CreatingSchedule","dispatch","useDispatch","inputSchedule","setInputSchedule","StyledCreatingSchedule","e","currentTarget","preventDefault","blur","schedule","background","RoyalBlue","position","x","y","size","width","height","Schedule","scheduleName","StyledSchedule","tabIndex","onKeyDown","metaKey","onDragStop","data","onResizeStop","dir","ref","delta","style","enableResizing","top","right","bottom","left","topRight","bottomRight","bottomLeft","topLeft","Rnd","Schedules","schedules","useSelector","state","scheduleState","StyledSchedules","ScheduleArea","StyledScheduleArea","HomeTemplate","GridLayout","App","Wrapper","console","log","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","action","payload","slice","composeEnhancers","composeWithDevTools","middleware","createLogger","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kKAAKA,E,uEAAAA,K,kCAAAA,E,kCAAAA,E,kCAAAA,E,oDAAAA,E,6CAAAA,M,KAQUA,ICRVC,EDQUD,IEJFE,EAAiBC,uBAC5BH,EAAmBI,gBADSD,GAIjBE,EAAiBF,uBAC5BH,EAAmBM,gBADSH,GAIjBI,EAAiBJ,uBAC5BH,EAAmBQ,gBADSL,GAIjBM,EAAyBN,uBACpCH,EAAmBU,yBADiBP,GAIzBQ,EAAqBR,uBAChCH,EAAmBY,qBADaT,GCbnBU,EALEC,IAAOC,KAAsB,SAAAC,GAAK,+BACpCA,EAAMC,KAD8B,kC,SFF9ChB,K,eAAAA,E,sBAAAA,E,oBAAAA,E,yBAAAA,M,KAOUA,IGPHiB,EAKAC,EHEGlB,I,qJGPHiB,K,gBAAAA,E,iBAAAA,M,cAKAC,O,kBAAAA,I,oBAAAA,I,mBAAAA,M,KCIZ,IAOeC,EAPgB,SAACJ,GAAW,IACjCK,EAASL,EAATK,KACR,OACE,kBAACC,EAAD,KAAsBD,IAMpBC,EAAsBR,IAAOC,IAAV,IAChBd,EAAMsB,UACFJ,EAASK,MACPN,EAAWO,Q,ilBCN1B,IAkBeC,EAlBoB,SAAAV,GAAU,IACnCW,EAAYX,EAAZW,QADkC,EAEEC,mBAAiB,CAAEC,MAAO,KAAMC,MAAO,OAFzC,mBAEnCC,EAFmC,KAEnBC,EAFmB,KAQ1C,OACE,kBAAC,IAAD,CACEH,MAAOE,EACPE,SAPiB,SAACF,GACpBC,EAAkBD,IAOhBJ,QAASA,EACTO,OAAQA,KAORA,EAA0B,CAC9BC,OAAQ,SAACC,GAAD,YACHA,EADG,CAENC,MAAOpC,EAAMsB,aAEfe,QAAS,SAACC,GAAD,YACJA,EADI,CAEPC,WAAYtB,EAAWO,OACvBY,MAAOpC,EAAMsB,aAEfkB,KAAM,SAACF,GAAD,YACDA,EADC,CAEJC,WAAYtB,EAAWO,OACvBY,MAAOpC,EAAMsB,cC7BFmB,EAfa,WAC1B,OACE,6BACGC,EAAUC,KAAI,SAACC,EAAUC,GACxB,OACE,yBAAKC,IAAG,kBAAaD,IACnB,kBAAC,EAAD,CAAOzB,KAAMwB,EAASxB,OACtB,kBAAC,EAAD,CAAWM,QAASkB,EAASlB,gBAmInCgB,EAAY,CApHgB,CAChCtB,KAAM,qMACNM,QAAS,CACP,CAAEE,MAAO,IAAKC,MAAO,oGACrB,CAAED,MAAO,IAAKC,MAAO,8FACrB,CAAED,MAAO,IAAKC,MAAO,sHACrB,CAAED,MAAO,IAAKC,MAAO,oGACrB,CAAED,MAAO,IAAKC,MAAO,wFACrB,CAAED,MAAO,IAAKC,MAAO,4GAIS,CAChCT,KAAM,6FACNM,QAAS,CACP,CAAEE,MAAO,IAAKC,MAAO,WACrB,CAAED,MAAO,IAAKC,MAAO,OACrB,CAAED,MAAO,IAAKC,MAAO,KACrB,CAAED,MAAO,IAAKC,MAAO,OACrB,CAAED,MAAO,IAAKC,MAAO,KACrB,CAAED,MAAO,IAAKC,MAAO,OACrB,CAAED,MAAO,IAAKC,MAAO,KACrB,CAAED,MAAO,IAAKC,MAAO,OACrB,CAAED,MAAO,IAAKC,MAAO,KACrB,CAAED,MAAO,IAAKC,MAAO,OACrB,CAAED,MAAO,KAAMC,MAAO,KACtB,CAAED,MAAO,KAAMC,MAAO,OACtB,CAAED,MAAO,KAAMC,MAAO,KACtB,CAAED,MAAO,KAAMC,MAAO,OACtB,CAAED,MAAO,KAAMC,MAAO,KACtB,CAAED,MAAO,KAAMC,MAAO,OACtB,CAAED,MAAO,KAAMC,MAAO,cAIQ,CAChCT,KAAM,yGACNM,QAAS,CACP,CAAEE,MAAO,IAAKC,MAAO,oDACrB,CAAED,MAAO,IAAKC,MAAO,kCACrB,CAAED,MAAO,IAAKC,MAAO,kCACrB,CAAED,MAAO,IAAKC,MAAO,kCACrB,CAAED,MAAO,IAAKC,MAAO,sDAIS,CAChCT,KAAM,yGACNM,QAAS,CACP,CAAEE,MAAO,IAAKC,MAAO,gBACrB,CAAED,MAAO,IAAKC,MAAO,4BACrB,CAAED,MAAO,IAAKC,MAAO,gBACrB,CAAED,MAAO,IAAKC,MAAO,4BACrB,CAAED,MAAO,IAAKC,MAAO,gBACrB,CAAED,MAAO,IAAKC,MAAO,wCACrB,CAAED,MAAO,IAAKC,MAAO,sBACrB,CAAED,MAAO,IAAKC,MAAO,gBACrB,CAAED,MAAO,IAAKC,MAAO,gBACrB,CAAED,MAAO,IAAKC,MAAO,wBAIS,CAChCT,KAAM,qEACNM,QAAS,CACP,CAAEE,MAAO,IAAKC,MAAO,KACrB,CAAED,MAAO,IAAKC,MAAO,KACrB,CAAED,MAAO,IAAKC,MAAO,KACrB,CAAED,MAAO,IAAKC,MAAO,KACrB,CAAED,MAAO,IAAKC,MAAO,KACrB,CAAED,MAAO,IAAKC,MAAO,QAIS,CAChCT,KAAM,mDACNM,QAAS,CACP,CAAEE,MAAO,IAAKC,MAAO,iEACrB,CAAED,MAAO,IAAKC,MAAO,gBACrB,CAAED,MAAO,IAAKC,MAAO,gBACrB,CAAED,MAAO,IAAKC,MAAO,gBACrB,CAAED,MAAO,IAAKC,MAAO,gBACrB,CAAED,MAAO,IAAKC,MAAO,gBACrB,CAAED,MAAO,IAAKC,MAAO,sBACrB,CAAED,MAAO,IAAKC,MAAO,kCACrB,CAAED,MAAO,IAAKC,MAAO,gBACrB,CAAED,MAAO,IAAKC,MAAO,wBAIS,CAChCT,KAAM,mGACNM,QAAS,CACP,CAAEE,MAAO,IAAKC,MAAO,8FACrB,CAAED,MAAO,IAAKC,MAAO,wFACrB,CAAED,MAAO,IAAKC,MAAO,oGACrB,CAAED,MAAO,IAAKC,MAAO,sDAIS,CAChCT,KAAM,uFACNM,QAAS,CACP,CAAEE,MAAO,IAAKC,MAAO,gBACrB,CAAED,MAAO,IAAKC,MAAO,4BACrB,CAAED,MAAO,IAAKC,MAAO,gBACrB,CAAED,MAAO,IAAKC,MAAO,4BACrB,CAAED,MAAO,IAAKC,MAAO,gBACrB,CAAED,MAAO,IAAKC,MAAO,wCACrB,CAAED,MAAO,IAAKC,MAAO,sBACrB,CAAED,MAAO,IAAKC,MAAO,gBACrB,CAAED,MAAO,IAAKC,MAAO,gBACrB,CAAED,MAAO,IAAKC,MAAO,yB,4FCpIzB,IAUekB,EAVgB,WAC7B,OACE,kBAAC,EAAD,CAAU/B,KAAMgC,GAAaC,UAC3B,kBAACC,EAAD,KACE,kBAAC,EAAD,SAQFA,EAAqBrC,IAAOC,IAAV,K,2bCRxB,IASeqC,EATe,SAACpC,GAAW,IAChCqC,EAASrC,EAATqC,KACR,OACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAaF,KAObC,EAAaxC,IAAOC,IAAV,IASEd,EAAMsB,WAIlBgC,EAAazC,IAAO0C,KAAV,IAGCtC,EAAWO,OACjBxB,EAAMsB,UACFJ,EAASK,O,yEC/BxB,IAWeiC,EAXmB,SAACzC,GAAW,IACpC0C,EAAU1C,EAAV0C,MACR,OACE,kBAACC,EAAD,KACGD,EAAMd,KAAI,SAACS,EAAMP,GAChB,OAAO,kBAAC,EAAD,CAAMC,IAAKD,EAAOO,KAAMA,SAQjCM,EAAiB7C,IAAOC,IAAV,K,mICfpB,IAWe6C,EAXkB,WAE/B,OACE,kBAAC,EAAD,CAAU3C,KAAMgC,GAAaY,YAC3B,kBAACC,EAAD,KACE,kBAAC,EAAD,CAAUJ,MAJQ,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,cAYvHI,EAAuBhD,IAAOC,IAAV,K,oHCb1B,IAWegD,EAXkB,WAE/B,OACE,kBAAC,EAAD,CAAU9C,KAAMgC,GAAae,YAC3B,kBAACC,EAAD,KACE,kBAAC,EAAD,CAAUP,MAJQ,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,cAYjIO,EAAuBnD,IAAOC,IAAV,K,qUCV1B,IASemD,EATiB,SAAClD,GAAW,IAClCmD,EAAYnD,EAAZmD,QACR,OACE,kBAACC,GAAD,CAAcD,QAASA,GAAvB,0CAQEC,GAAetD,IAAOuD,OAAV,IACHlD,EAASmD,OACbrE,EAAMsB,UACAL,EAAWO,OAOVxB,EAAMsE,WAGNtE,EAAMsE,Y,4TCvBxB,IAOeC,GAPe,SAACxD,GAAW,IAChCiB,EAAoBjB,EAApBiB,SAAUJ,EAAUb,EAAVa,MAClB,OACE,kBAAC4C,GAAD,CAAYC,KAAK,OAAOzC,SAAUA,EAAUJ,MAAOA,KAMjD4C,GAAa3D,IAAO6D,MAAV,KAIL1E,EAAMsB,UACFJ,EAASmD,OACPpD,EAAWO,OAKVxB,EAAMsE,Y,wICtBxB,IA4BeK,GA5BoB,WACjC,IAAMC,EAAWC,cADsB,EAEGlD,mBAAS,IAFZ,mBAEhCmD,EAFgC,KAEjBC,EAFiB,KAoBvC,OACE,kBAACC,GAAD,KACE,kBAAC,GAAD,CAAMhD,SAjBO,SAACiD,GAChBF,EAAiBE,EAAEC,cAActD,QAgBLA,MAAOkD,IACjC,kBAAC,EAAD,CAAQZ,QAbI,SAACe,GACfA,EAAEE,iBACFF,EAAEC,cAAcE,OACM,KAAlBN,IAGJF,EAAS3E,EAAe,CAAEoF,SAAU,CAAEjE,KAAM0D,EAAeQ,WAAYtF,EAAMuF,UAAWC,SAAU,CAAEC,EAAG,EAAGC,EAAG,GAAKC,KAAM,CAAEC,MAAO,OAAQC,OAAQ,YACjJd,EAAiB,UAafC,GAAyBnE,IAAOC,IAAV,M,SC6BbgF,GA/CmB,SAAC/E,GAAW,IACpCgF,EAAoDhF,EAApDgF,aAAcT,EAAsCvE,EAAtCuE,WAAYzC,EAA0B9B,EAA1B8B,MAAO2C,EAAmBzE,EAAnByE,SAAUG,EAAS5E,EAAT4E,KAC7Cf,EAAWC,cA0BjB,OACE,kBAACmB,GAAD,CACEC,SAAU,EACVC,UAbc,SAACjB,GACjB,GAAIA,EAAEkB,SAAqB,MAAVlB,EAAEnC,IACjB8B,EAAStE,EAAe,CAAE+E,SAAU,CAAEjE,KAAM2E,EAAcT,aAAYE,WAAUG,eAC3E,IAAc,cAAVV,EAAEnC,IAGX,OAFA8B,EAASxE,EAAe,CAAEyC,aAU1ByC,WAAYA,EACZE,SAAUA,EACVG,KAAMA,EACNS,WA/BW,SAACnB,EAAmBoB,GAC7Bb,EAASC,IAAMY,EAAKZ,GAAKD,EAASE,IAAMW,EAAKX,GAGjDd,EAASpE,EAAuB,CAAEqC,QAAO2C,SAAU,CAAEC,EAAGY,EAAKZ,EAAGC,EAAGW,EAAKX,OA4BtEY,aAzBiB,SAACrB,EAA4BsB,EAAsBC,EAAqBC,EAAuBjB,GAC9GG,EAAKC,QAAUY,EAAIE,MAAMd,OAASD,EAAKE,SAAWW,EAAIE,MAAMb,QAGhEjB,EAASlE,EAAmB,CAAEmC,QAAO2C,SAAU,CAAEC,EAAGD,EAASC,EAAGC,EAAGF,EAASE,GAAKC,KAAM,CAAEC,MAAOY,EAAIE,MAAMd,MAAOC,OAAQW,EAAIE,MAAMb,YAsBjIc,eAAgB,CACdC,KAAK,EAAOC,OAAO,EAAMC,QAAQ,EAAMC,MAAM,EAC7CC,UAAU,EAAOC,aAAa,EAAMC,YAAY,EAAOC,SAAS,IAGjEpB,IAWDC,GAAiBnF,YAAOuG,KAAPvG,EAAiC,SAAAE,GAAK,gCAC7CA,EAAMuE,WADuC,6BAE5CrE,EAAWO,OAFiC,oFAM9CN,EAASmD,OANqC,4EAS/BrE,EAAMsB,UATyB,e,2ECnE7D,IAWe+F,GAXa,WAC1B,IAAMC,EAAYC,aAAgE,SAAAC,GAAK,OAAIA,EAAMC,cAAcH,aAC/G,OACE,kBAACI,GAAD,KACGJ,EAAU3E,KAAI,SAAC0C,EAAUxC,GACxB,OAAO,kBAAC,GAAD,CAAUC,IAAG,UAAKD,EAAL,YAAcwC,GAAYU,aAAcV,EAASjE,KAAMkE,WAAYD,EAASC,WAAYzC,MAAOA,EAAO2C,SAAUH,EAASG,SAAUG,KAAMN,EAASM,YAQxK+B,GAAkB7G,IAAOC,IAAV,M,8FCZrB,IAWe6G,GAXgB,WAC7B,OACE,kBAAC,EAAD,CAAU3G,KAAMgC,GAAa8C,UAC3B,kBAAC8B,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,SAQFA,GAAqB/G,IAAOC,IAAV,M,+QCZxB,IAaYkC,GAFG6E,GAXgB,WAC7B,OACE,kBAACC,GAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,S,SAOM9E,K,oBAAAA,E,wBAAAA,E,wBAAAA,E,qBAAAA,Q,KAOZ,IAAM8E,GAAajH,IAAOC,IAAV,M,0LCrBhB,IAuBeiH,GAvBO,WACpB,IAAMnD,EAAWC,cACXvE,EAAiBiH,aAAqE,SAAAC,GAAK,OAAIA,EAAMC,cAAcnH,kBAczH,OACE,kBAAC0H,GAAD,CAAS9B,UAdO,SAACjB,GACbA,EAAEkB,SAAqB,MAAVlB,EAAEnC,MACjBmF,QAAQC,IAAI,aACgB,KAAxB5H,EAAec,MAGjBwD,EAAS3E,EAAe,CAAEoF,SAAU,CAAEjE,KAAMd,EAAec,KAAMkE,WAAYhF,EAAegF,WAAYE,SAAU,CAAEC,EAAG,EAAGC,EAAG,GAAKC,KAAM,CAAEC,MAAOtF,EAAeqF,KAAKC,MAAOC,OAAQvF,EAAeqF,KAAKE,cAQ7KI,SAAU,GACvC,kBAAC,GAAD,QAOA+B,GAAUnH,IAAOC,IAAV,MCpBOqH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,klBCdN,IAAMC,GAA8B,CAClClB,UAAW,GACXhH,eAAgB,CACdc,KAAM,GACNkE,WAAY,GACZE,SAAU,CACRC,EAAG,EACHC,EAAG,GAELC,KAAM,CACJC,MAAO,OACPC,OAAQ,UCZd,IAIe4C,GAJKC,2BAAgB,CAClCjB,cDgBa,WAAoG,IAA7ED,EAA4E,uDAArDgB,GAAcG,EAAuC,uCAChH,OAAQA,EAAOlE,MACb,KAAK1E,EAAmBI,gBACtB,OAAO,MACFqH,EADL,CAEEF,UAAU,GAAD,oBACJE,EAAMF,WADF,CAEPqB,EAAOC,QAAQvD,aAGrB,KAAKtF,EAAmBM,gBACtB,OAAO,MACFmH,EADL,CAEEF,UAAU,GAAD,oBACJE,EAAMF,UAAUuB,MAAM,EAAGF,EAAOC,QAAQ/F,QADpC,aAEJ2E,EAAMF,UAAUuB,MAAMF,EAAOC,QAAQ/F,MAAQ,OAGtD,KAAK9C,EAAmBU,yBACtB,OAAO,MACF+G,EADL,CAEEF,UAAU,GAAD,oBACJE,EAAMF,UAAUuB,MAAM,EAAGF,EAAOC,QAAQ/F,QADpC,CAEP,CACEzB,KAAMoG,EAAMF,UAAUqB,EAAOC,QAAQ/F,OAAOzB,KAC5CkE,WAAYkC,EAAMF,UAAUqB,EAAOC,QAAQ/F,OAAOyC,WAClDE,SAAUmD,EAAOC,QAAQpD,SACzBG,KAAM6B,EAAMF,UAAUqB,EAAOC,QAAQ/F,OAAO8C,OANvC,aAQJ6B,EAAMF,UAAUuB,MAAMF,EAAOC,QAAQ/F,MAAQ,OAGtD,KAAK9C,EAAmBY,qBACtB,OAAO,MACF6G,EADL,CAEEF,UAAU,GAAD,oBACJE,EAAMF,UAAUuB,MAAM,EAAGF,EAAOC,QAAQ/F,QADpC,CAEP,CACEzB,KAAMoG,EAAMF,UAAUqB,EAAOC,QAAQ/F,OAAOzB,KAC5CkE,WAAYkC,EAAMF,UAAUqB,EAAOC,QAAQ/F,OAAOyC,WAClDE,SAAUmD,EAAOC,QAAQpD,SACzBG,KAAMgD,EAAOC,QAAQjD,OANhB,aAQJ6B,EAAMF,UAAUuB,MAAMF,EAAOC,QAAQ/F,MAAQ,OAGtD,KAAK9C,EAAmBQ,gBACtB,OAAO,MACFiH,EADL,CAEElH,eAAe,MACVqI,EAAOC,QAAQvD,YAGxB,QACE,OAAOmC,M,kBEhEPsB,GAAmBC,+BAAoB,IAKvCC,GAAa,CADJC,2BAETC,GAAQC,uBAAYV,GAAaK,GAAiBM,mBAAe,WAAf,EAAmBJ,MAE3EK,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,GAAD,OAEFK,SAASC,eAAe,SHmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d81a662d.chunk.js","sourcesContent":["enum ScheduleActionType {\n  CREATE_SCHEDULE = 'CREATE_SCHEDULE',\n  DELETE_SCHEDULE = 'DELETE_SCHEDULE',\n  COPIED_SCHEDULE = 'COPIED_SCHEDULE',\n  POSITION_CHANGE_SCHEDULE = 'POSITION_CHANGE_SCHEDULE',\n  SIZE_CHANGE_SCHEDULE = 'SIZE_CHANGE_SCHEDULE'\n}\n\nexport default ScheduleActionType","enum Color {\n  Gray = '#424242',\n  RoyalBlue = 'royalblue',\n  LightGray = '#70757a',\n  WhiteSmoke = 'whitesmoke'\n}\n\nexport default Color","import { createAction } from 'typesafe-actions';\nimport { Schedule, SchedulePosition, ScheduleSize } from '../../states/Schedules';\nimport ScheduleActionType from './ActionType';\n\nexport const createSchedule = createAction(\n  ScheduleActionType.CREATE_SCHEDULE\n)<{ schedule: Schedule }>();\n\nexport const deleteSchedule = createAction(\n  ScheduleActionType.DELETE_SCHEDULE\n)<{ index: number }>();\n\nexport const copiedSchedule = createAction(\n  ScheduleActionType.COPIED_SCHEDULE\n)<{ schedule: Schedule }>();\n\nexport const positionChangeSchedule = createAction(\n  ScheduleActionType.POSITION_CHANGE_SCHEDULE\n)<{ index: number, position: SchedulePosition }>();\n\nexport const sizeChangeSchedule = createAction(\n  ScheduleActionType.SIZE_CHANGE_SCHEDULE\n)<{ index: number, position: SchedulePosition, size: ScheduleSize }>();","import styled from \"styled-components\";\n\nconst GridArea = styled.div<{ area: string }>(props => `\n  grid-area: ${props.area};\n  position: relative;\n`);\n\nexport default GridArea;","export enum FontFamily {\n  Mairyo = 'Mairyo',\n  Roboto = 'Roboto',\n}\n\nexport enum FontSize {\n  Small = 13,\n  Medium = 16,\n  Large = 20\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Color from '../../styles/Color';\nimport { FontSize, FontFamily } from '../../styles/Font';\n\ntype Props = {\n  name: string\n}\n\nconst Label: React.FC<Props> = (props) => {\n  const { name } = props;\n  return (\n    <StyledQuestionLabel>{name}</StyledQuestionLabel>\n  )\n}\n\nexport default Label;\n\nconst StyledQuestionLabel = styled.div`\ncolor: ${Color.LightGray};\nfont-size: ${FontSize.Small};\nfont-family: ${FontFamily.Roboto};\nmargin-top: 20px;\n`","import React, { useState, CSSProperties } from 'react';\nimport { default as Select, Styles } from 'react-select';\nimport { ValueType } from 'react-select/src/types';\nimport { FontFamily } from '../../styles/Font';\nimport Color from '../../styles/Color';\n\nexport type Option = {\n  value: string | null,\n  label: string | null\n}\n\ntype Props = {\n  options: Option[]\n}\n\nconst SelectBox: React.FC<Props> = props => {\n  const { options } = props\n  const [selectedOption, setSelectedOption] = useState<Option>({ value: null, label: null });\n\n  const handleChange = (selectedOption: ValueType<Option>) => {\n    setSelectedOption(selectedOption as Option)\n  }\n\n  return (\n    <Select\n      value={selectedOption}\n      onChange={handleChange}\n      options={options}\n      styles={styles}\n    />\n  )\n};\n\nexport default SelectBox;\n\nconst styles: Partial<Styles> = {\n  option: (provided) => ({\n    ...provided,\n    color: Color.LightGray\n  }),\n  control: (base: CSSProperties) => ({\n    ...base,\n    fontFamily: FontFamily.Roboto as string,\n    color: Color.LightGray\n  }),\n  menu: (base: CSSProperties) => ({\n    ...base,\n    fontFamily: FontFamily.Roboto as string,\n    color: Color.LightGray\n  })\n};\n\n\n\n\n","import React from 'react';\nimport Label from '../Atoms/Label';\nimport SelectBox, { Option } from '../Atoms/SelectBox';\n\nconst Questions: React.FC = () => {\n  return (\n    <div>\n      {questions.map((question, index) => {\n        return (\n          <div key={`question${index}`}>\n            <Label name={question.name} />\n            <SelectBox options={question.options} />\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Questions;\n\ntype SelectQuestion = {\n  name: string\n  options: Option[]\n}\n\nconst question1: SelectQuestion = {\n  name: '「この時間に寝るぞ」と決めた時間の60分前、自分はどんな気分だったか',\n  options: [\n    { value: '0', label: 'ハッキリ目が覚めていて元気だった' },\n    { value: '1', label: '疲れてはいたがヘトヘトではない' },\n    { value: '2', label: 'ハッキリ目が覚めていたがヘトヘトだった' },\n    { value: '3', label: 'ハッキリ目が覚めていて元気だった' },\n    { value: '4', label: 'ちょっとだけ眠気を感じていた' },\n    { value: '5', label: '起きているのが難しいぐらい眠かった' },\n  ]\n}\n\nconst question2: SelectQuestion = {\n  name: '昨夜はトータルで何時間眠れたか',\n  options: [\n    { value: '0', label: '〜2' },\n    { value: '1', label: '2.5' },\n    { value: '2', label: '3' },\n    { value: '3', label: '3.5' },\n    { value: '4', label: '4' },\n    { value: '5', label: '4.5' },\n    { value: '6', label: '5' },\n    { value: '7', label: '5.5' },\n    { value: '8', label: '6' },\n    { value: '9', label: '6.5' },\n    { value: '10', label: '7' },\n    { value: '11', label: '7.5' },\n    { value: '12', label: '8' },\n    { value: '13', label: '8.5' },\n    { value: '14', label: '9' },\n    { value: '15', label: '9.5' },\n    { value: '16', label: '10〜' },\n  ]\n}\n\nconst question3: SelectQuestion = {\n  name: '昨夜はどれぐらい簡単に入眠できたか',\n  options: [\n    { value: '0', label: 'とても簡単だった' },\n    { value: '1', label: '簡単だった' },\n    { value: '2', label: '普通だった' },\n    { value: '3', label: '難しかった' },\n    { value: '4', label: 'とても難しかった' },\n  ]\n}\n\nconst question4: SelectQuestion = {\n  name: '寝床に入った時の気分はどうだったか',\n  options: [\n    { value: '0', label: '普通' },\n    { value: '1', label: '興奮状態' },\n    { value: '2', label: '不安' },\n    { value: '3', label: 'イライラ' },\n    { value: '4', label: '平静' },\n    { value: '5', label: '傷ついた状態' },\n    { value: '6', label: '無感情' },\n    { value: '7', label: '幸福' },\n    { value: '8', label: '怒り' },\n    { value: '9', label: '悲しみ' }\n  ]\n}\n\nconst question5: SelectQuestion = {\n  name: '夜中に何回目が覚めたか',\n  options: [\n    { value: '0', label: '0' },\n    { value: '1', label: '1' },\n    { value: '2', label: '2' },\n    { value: '3', label: '3' },\n    { value: '4', label: '4' },\n    { value: '5', label: '5~' }\n  ]\n}\n\nconst question6: SelectQuestion = {\n  name: 'どんな夢を見たか',\n  options: [\n    { value: '0', label: '見てない/覚えていない' },\n    { value: '1', label: '幸福' },\n    { value: '2', label: '退屈' },\n    { value: '3', label: '恐怖' },\n    { value: '4', label: '異常' },\n    { value: '5', label: '奇妙' },\n    { value: '6', label: '明晰夢' },\n    { value: '7', label: 'いつもの夢' },\n    { value: '8', label: '性的' },\n    { value: '9', label: '現実的' }\n  ]\n}\n\nconst question7: SelectQuestion = {\n  name: '目が覚めた時の気分はどうだったか',\n  options: [\n    { value: '0', label: 'すっきりとリフレッシュしていた' },\n    { value: '1', label: '目は覚めたがなんとなくダルい' },\n    { value: '2', label: '疲れが残っていたがすぐ目が覚めた' },\n    { value: '3', label: '疲れていてダルい' },\n  ]\n}\n\nconst question8: SelectQuestion = {\n  name: '起きた後の気分はどうだったか',\n  options: [\n    { value: '0', label: '普通' },\n    { value: '1', label: '興奮状態' },\n    { value: '2', label: '不安' },\n    { value: '3', label: 'イライラ' },\n    { value: '4', label: '平静' },\n    { value: '5', label: '傷ついた状態' },\n    { value: '6', label: '無感情' },\n    { value: '7', label: '幸福' },\n    { value: '8', label: '怒り' },\n    { value: '9', label: '悲しみ' }\n  ]\n}\n\nconst questions = [question1, question2, question3, question4, question5, question6, question7, question8]\n\n","import React from 'react';\nimport GridArea from '../GridArea';\nimport { HomeGridArea } from '../Templates/HomeTemplate';\nimport Questions from '../Molecules/Questions';\nimport styled from 'styled-components';\n\nconst QuestionArea: React.FC = () => {\n  return (\n    <GridArea area={HomeGridArea.Question}>\n      <StyledQuestionArea>\n        <Questions />\n      </StyledQuestionArea>\n    </GridArea>\n  )\n};\n\nexport default QuestionArea;\n\nconst StyledQuestionArea = styled.div`\n  overflow: scroll;\n`","import React from 'react';\nimport styled from 'styled-components';\nimport Color from '../../styles/Color';\nimport { FontSize, FontFamily } from '../../styles/Font';\n\ntype Props = {\n  time: string\n}\n\n// TimeLineにおける1要素 時間+線\nconst Time: React.FC<Props> = (props) => {\n  const { time } = props\n  return (\n    <StyledTime>\n      <StyledText>{time}</StyledText>\n    </StyledTime>\n  )\n}\n\nexport default Time;\n\nconst StyledTime = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  &::after {\n    content: \"\";\n    height: 1px;\n    width: 20vw;\n    display: block;\n    background: ${Color.LightGray};\n    margin-left: .4em;\n  }\n`\nconst StyledText = styled.span`\n  width: 60px;\n  text-align: right;\n  font-family: ${FontFamily.Roboto};\n  color: ${Color.LightGray};\n  font-size: ${FontSize.Small}px;\n`\n","import React from 'react';\nimport Time from '../Atoms/Time';\nimport styled from 'styled-components';\n\ntype Props = {\n  times: string[]\n}\n\nconst TimeLine: React.FC<Props> = (props) => {\n  const { times } = props;\n  return (\n    <StyledTimeLine>\n      {times.map((time, index) => {\n        return <Time key={index} time={time} />\n      })}\n    </StyledTimeLine>\n  )\n}\n\nexport default TimeLine;\n\nconst StyledTimeLine = styled.div`\n\n`","import React from 'react';\nimport TimeLine from '../Molecules/TimeLine';\nimport GridArea from '../GridArea';\nimport { HomeGridArea } from '../Templates/HomeTemplate';\nimport styled from 'styled-components';\n\nconst TimeLineAmArea: React.FC = () => {\n  const times: string[] = ['0:00', '1:00', '2:00', '3:00', '4:00', '5:00', '6:00', '7:00', '8:00', '9:00', '10:00', '11:00', '12:00']\n  return (\n    <GridArea area={HomeGridArea.TimeLineAm}>\n      <StyledTimeLineAmArea>\n        <TimeLine times={times} />\n      </StyledTimeLineAmArea>\n    </GridArea>\n  )\n};\n\nexport default TimeLineAmArea;\n\nconst StyledTimeLineAmArea = styled.div`\n  margin-top: 10px;\n  position: absolute;\n  right: 10px;\n`\n\n","import React from 'react';\nimport TimeLine from '../Molecules/TimeLine';\nimport GridArea from '../GridArea';\nimport { HomeGridArea } from '../Templates/HomeTemplate';\nimport styled from 'styled-components';\n\nconst TimeLinePmArea: React.FC = () => {\n  const times: string[] = ['12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00', '24:00']\n  return (\n    <GridArea area={HomeGridArea.TimeLinePm}>\n      <StyledTimeLinePmArea>\n        <TimeLine times={times} />\n      </StyledTimeLinePmArea>\n    </GridArea>\n  )\n};\n\nexport default TimeLinePmArea;\n\nconst StyledTimeLinePmArea = styled.div`\n  margin-top: 10px;\n  align-items: center;\n`\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontSize, FontFamily } from '../../styles/Font';\nimport Color from '../../styles/Color';\n\ntype Props = {\n  onClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n}\n\nconst Button: React.FC<Props> = (props) => {\n  const { onClick } = props;\n  return (\n    <StyledButton onClick={onClick}>\n      ＋ 予定を追加\n    </StyledButton>\n  )\n}\n\nexport default Button;\n\nconst StyledButton = styled.button`\n  font-size: ${FontSize.Medium}px;\n  color: ${Color.LightGray};\n  font-family: ${FontFamily.Roboto};\n  border-radius: 3px;\n  text-decoration: none;\n  padding: 5px 7px 3px 7px;\n  margin-left: 5px;\n  &:focus {\n    outline: none;\n    background: ${Color.WhiteSmoke}\n  }\n  &:hover {\n    background: ${Color.WhiteSmoke}\n  }\n`","import React from 'react';\nimport styled from 'styled-components';\nimport Color from '../../styles/Color';\nimport { FontSize, FontFamily } from '../../styles/Font';\n\ntype Props = {\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  value: string;\n}\n\nconst Form: React.FC<Props> = (props) => {\n  const { onChange, value } = props\n  return (\n    <StyledForm type='text' onChange={onChange} value={value} />\n  )\n}\n\nexport default Form;\n\nconst StyledForm = styled.input`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  color: ${Color.LightGray};\n  font-size: ${FontSize.Medium}px;\n  font-family: ${FontFamily.Roboto};\n  border-radius: 3px;\n  padding: 5px 7px 5px 3px;\n  &:focus {\n    outline:none;\n    background: ${Color.WhiteSmoke}\n  }\n`","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { createSchedule } from '../../actions/Schedules/ActionCreator';\nimport Color from '../../styles/Color'\nimport Button from '../Atoms/Button';\nimport Form from '../Atoms/Form';\n\nconst CreatingSchedule: React.FC = () => {\n  const dispatch = useDispatch();\n  const [inputSchedule, setInputSchedule] = useState('');\n\n  // スケジュール入力フォームのイベント\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    setInputSchedule(e.currentTarget.value);\n  }\n\n  //　スケジュール追加フォームのイベント\n  const onClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    e.currentTarget.blur();\n    if (inputSchedule === '') {\n      return\n    }\n    dispatch(createSchedule({ schedule: { name: inputSchedule, background: Color.RoyalBlue, position: { x: 0, y: 0 }, size: { width: 'auto', height: 'auto' } } }))\n    setInputSchedule('');\n  }\n\n  return (\n    <StyledCreatingSchedule>\n      <Form onChange={onChange} value={inputSchedule} />\n      <Button onClick={onClick} />\n    </StyledCreatingSchedule>\n  )\n}\n\nexport default CreatingSchedule;\n\nconst StyledCreatingSchedule = styled.div`\n  position: absolute;\n  right: 10px;\n  margin-bottom: 10px;\n`","import React from 'react';\nimport styled from 'styled-components';\nimport { FontSize, FontFamily } from '../../styles/Font';\nimport { Rnd, DraggableData, Position, ResizableDelta } from 'react-rnd';\nimport { DraggableEvent } from 'react-draggable';\nimport Color from '../../styles/Color';\nimport { useDispatch } from 'react-redux';\nimport { copiedSchedule, deleteSchedule, positionChangeSchedule, sizeChangeSchedule } from '../../actions/Schedules/ActionCreator';\nimport { SchedulePosition, ScheduleSize } from '../../states/Schedules';\nimport { ResizeDirection } from 're-resizable';\n\ntype Props = {\n  scheduleName: string;\n  background: string;\n  index: number;\n  position: SchedulePosition;\n  size: ScheduleSize;\n}\n\n// タイムラインに貼り付ける予定が書かれたブロック\nconst Schedule: React.FC<Props> = (props) => {\n  const { scheduleName, background, index, position, size } = props;\n  const dispatch = useDispatch();\n\n  const onDrag = (e: DraggableEvent, data: DraggableData) => {\n    if (position.x === data.x && position.y === data.y) {\n      return\n    }\n    dispatch(positionChangeSchedule({ index, position: { x: data.x, y: data.y } }))\n  }\n\n  const onResizeStop = (e: MouseEvent | TouchEvent, dir: ResizeDirection, ref: HTMLDivElement, delta: ResizableDelta, position: Position) => {\n    if (size.width === ref.style.width && size.height === ref.style.height) {\n      return\n    }\n    dispatch(sizeChangeSchedule({ index, position: { x: position.x, y: position.y }, size: { width: ref.style.width, height: ref.style.height } }))\n  }\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.metaKey && e.key === 'c') {\n      dispatch(copiedSchedule({ schedule: { name: scheduleName, background, position, size } }))\n    } else if (e.key === 'Backspace') {\n      dispatch(deleteSchedule({ index }))\n    } else {\n      return;\n    }\n  }\n\n  return (\n    <StyledSchedule\n      tabIndex={0}\n      onKeyDown={onKeyDown}\n      background={background}\n      position={position}\n      size={size}\n      onDragStop={onDrag}\n      onResizeStop={onResizeStop}\n      enableResizing={{\n        top: false, right: true, bottom: true, left: true,\n        topRight: false, bottomRight: true, bottomLeft: false, topLeft: false\n      }}\n    >\n      {scheduleName}\n    </StyledSchedule >\n  )\n}\n\nexport default Schedule\n\ntype StyledScheduleProps = {\n  background: string\n}\n\nconst StyledSchedule = styled(Rnd)<StyledScheduleProps>(props => `\n  background: ${props.background};\n  font-family: ${FontFamily.Roboto};\n  color: white;\n  padding: 8px;\n  border-radius: 5px;\n  font-size: ${FontSize.Medium}px;\n  &:focus{\n    outline: none;\n    box-shadow: 3px 3px 5px ${Color.LightGray};\n  }\n`)","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport RootState from '../../states';\nimport Schedule from '../Atoms/Schedule';\nimport styled from 'styled-components';\n\nconst Schedules: React.FC = () => {\n  const schedules = useSelector<RootState, RootState['scheduleState']['schedules']>(state => state.scheduleState.schedules);\n  return (\n    <StyledSchedules>\n      {schedules.map((schedule, index) => {\n        return <Schedule key={`${index}:${schedule}`} scheduleName={schedule.name} background={schedule.background} index={index} position={schedule.position} size={schedule.size} />\n      })}\n    </StyledSchedules>\n  )\n}\n\nexport default Schedules;\n\nconst StyledSchedules = styled.div`\n\n`","import React from 'react';\nimport CreatingSchedule from '../Molecules/CreatingSchedule';\nimport Schedules from '../Molecules/Schedules';\nimport GridArea from '../GridArea';\nimport { HomeGridArea } from '../Templates/HomeTemplate';\nimport styled from 'styled-components';\n\nconst ScheduleArea: React.FC = () => {\n  return (\n    <GridArea area={HomeGridArea.Schedule}>\n      <StyledScheduleArea>\n        <CreatingSchedule />\n        <Schedules />\n      </StyledScheduleArea>\n    </GridArea>\n  )\n};\n\nexport default ScheduleArea;\n\nconst StyledScheduleArea = styled.div`\n  margin-top: 10px;\n`","import React from 'react';\nimport styled from 'styled-components';\nimport QuestionArea from '../Organisms/QuestionArea';\nimport TimeLineAmArea from '../Organisms/TimeLineAmArea';\nimport TimeLinePmArea from '../Organisms/TimeLinePmArea';\nimport ScheduleArea from '../Organisms/ScheduleArea';\n\n\nconst HomeTemplate: React.FC = () => {\n  return (\n    <GridLayout>\n      <QuestionArea />\n      <TimeLineAmArea />\n      <TimeLinePmArea />\n      <ScheduleArea />\n    </GridLayout>\n  )\n}\n\nexport default HomeTemplate;\n\nexport enum HomeGridArea {\n  Question = 'Question',\n  TimeLineAm = 'TimeLineAm',\n  TimeLinePm = 'TimeLinePm',\n  Schedule = 'Schedule'\n}\n\nconst GridLayout = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: auto auto;\n  grid-template-areas: \n   \" Question  TimeLineAm  TimeLinePm \"\n   \" Question  Schedule    Schedule   \"\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport RootState from '../states';\nimport { createSchedule } from '../actions/Schedules/ActionCreator';\nimport HomeTemplate from './Templates/HomeTemplate';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const copiedSchedule = useSelector<RootState, RootState['scheduleState']['copiedSchedule']>(state => state.scheduleState.copiedSchedule);\n  const onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.metaKey && e.key === 'v') {\n      console.log('command v')\n      if (copiedSchedule.name === '') {\n        return\n      } else {\n        dispatch(createSchedule({ schedule: { name: copiedSchedule.name, background: copiedSchedule.background, position: { x: 0, y: 0 }, size: { width: copiedSchedule.size.width, height: copiedSchedule.size.height } } }));\n      }\n    } else {\n      return\n    }\n  }\n\n  return (\n    <Wrapper onKeyDown={onKeyDown} tabIndex={0}>\n      <HomeTemplate />\n    </Wrapper>\n  );\n}\n\nexport default App;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  outline: none; /* フォーカス時の青枠を外す*/\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ScheduleState from \"../states/Schedules\";\nimport ScheduleAction from \"../actions/Schedules/Action\";\nimport ScheduleActionType from \"../actions/Schedules/ActionType\";\n\nconst initialState: ScheduleState = {\n  schedules: [],\n  copiedSchedule: {\n    name: '',\n    background: '',\n    position: {\n      x: 0,\n      y: 0\n    },\n    size: {\n      width: 'auto',\n      height: 'auto'\n    }\n  },\n}\n\nexport default function scheduleState(state: ScheduleState = initialState, action: ScheduleAction): ScheduleState {\n  switch (action.type) {\n    case ScheduleActionType.CREATE_SCHEDULE:\n      return {\n        ...state,\n        schedules: [\n          ...state.schedules,\n          action.payload.schedule\n        ]\n      }\n    case ScheduleActionType.DELETE_SCHEDULE:\n      return {\n        ...state,\n        schedules: [\n          ...state.schedules.slice(0, action.payload.index),\n          ...state.schedules.slice(action.payload.index + 1)\n        ]\n      }\n    case ScheduleActionType.POSITION_CHANGE_SCHEDULE:\n      return {\n        ...state,\n        schedules: [\n          ...state.schedules.slice(0, action.payload.index),\n          {\n            name: state.schedules[action.payload.index].name,\n            background: state.schedules[action.payload.index].background,\n            position: action.payload.position,\n            size: state.schedules[action.payload.index].size\n          },\n          ...state.schedules.slice(action.payload.index + 1)\n        ]\n      }\n    case ScheduleActionType.SIZE_CHANGE_SCHEDULE:\n      return {\n        ...state,\n        schedules: [\n          ...state.schedules.slice(0, action.payload.index),\n          {\n            name: state.schedules[action.payload.index].name,\n            background: state.schedules[action.payload.index].background,\n            position: action.payload.position,\n            size: action.payload.size\n          },\n          ...state.schedules.slice(action.payload.index + 1)\n        ]\n      }\n    case ScheduleActionType.COPIED_SCHEDULE:\n      return {\n        ...state,\n        copiedSchedule: {\n          ...action.payload.schedule\n        }\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport scheduleState from './Schedules'\n\nconst rootReducer = combineReducers({\n  scheduleState\n})\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createLogger } from 'redux-logger';\nimport { Provider } from 'react-redux';\n\nconst composeEnhancers = composeWithDevTools({\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\n\nconst logger = createLogger();\nconst middleware = [logger];\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}